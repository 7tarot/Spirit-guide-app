<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8"/>
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Spirit Guide App â€” Numerology Edition</title>
  <link rel="stylesheet" href="style.css"/>
  <meta name="theme-color" content="#00ff88"/>
</head>
<body>
  <main class="container">
    <header class="header">
      <h1>Spirit Guide App</h1>
      <p class="tag">Deterministic â€¢ Numerology â€¢ Tarot â€¢ Connections</p>
    </header>

    <!-- INPUT FORM -->
    <section id="formSection" class="card">
      <h2>Your details</h2>
      <form id="guideForm">
        <div class="field">
          <label for="name">Full name</label>
          <input type="text" id="name" placeholder="e.g., Steven John Abbott" required/>
        </div>
        <div class="field">
          <label for="dob">Birth date</label>
          <input type="date" id="dob" required/>
        </div>
        <button class="btn" type="submit">Calculate</button>
        <button class="btn ghost" type="button" id="demoBtn">Demo</button>
      </form>
    </section>

    <!-- RESULTS -->
    <section id="resultSection" class="card hidden">
      <div class="result-head">
        <div>
          <h2 id="guideName"></h2>
          <p id="guideMeta" class="meta"></p>
        </div>
        <div class="meta-right">
          <p id="lifePath" class="pill"></p>
          <p id="seedOut" class="pill"></p>
        </div>
      </div>

      <div class="grid">
        <div>
          <h3>Backstory</h3>
          <p id="backstory"></p>

          <!-- Narration -->
          <div class="actions">
            <button class="btn" id="speakBtn">ðŸ”ˆ Narrate</button>
            <button class="btn ghost" id="stopSpeakBtn">Stop</button>
            <select id="voiceSel"></select>
            <select id="moodSel">
              <option value="soothing" selected>Soothing</option>
              <option value="mysterious">Mysterious</option>
              <option value="empowering">Empowering</option>
            </select>
            <input id="rateSel" type="range" min="0.6" max="1.1" step="0.05" value="0.85"/>
          </div>

          <!-- Ambient -->
          <div class="actions">
            <select id="ambSel">
              <option value="none" selected>Ambient: Off</option>
              <option value="rain">Ambient: Mystic Rain</option>
              <option value="choir">Ambient: Celestial Choir</option>
              <option value="drone">Ambient: Deep Space Drone</option>
            </select>
            <button class="btn ghost" id="ambStopBtn">Stop Ambient</button>
          </div>
        </div>

        <aside>
          <h3>Keywords</h3>
          <ul id="keywords"></ul>
          <h3>Mantra</h3>
          <blockquote id="mantra"></blockquote>
          <h3>Sigil</h3>
          <div id="sigilBox"></div>
        </aside>
      </div>

      <!-- Chart + Connections -->
      <section class="card">
        <h3>Your Numerology Chart</h3>
        <div id="chartGrid"></div>
      </section>

      <section class="card">
        <h3>Connections (Soulmate â€¢ Karmic â€¢ Twin)</h3>
        <div id="connections"></div>
      </section>

      <div class="actions">
        <button class="btn" id="resetBtn">Reset</button>
      </div>

      <audio id="ambAudio" loop></audio>
    </section>

    <footer class="footer">
      <small>Â© <span id="year"></span> 7 Tarot â€¢ Works offline â€¢ No data leaves your browser</small>
    </footer>
  </main>

  <script>
    // Ambient soundscapes
    const AMBIENT = {
      rain:  "ambient/binaural.mp3",
      choir: "ambient/choir.mp3",
      drone: "ambient/drone.mp3"
    };
    function setAmbient(key){
      const audio = document.getElementById('ambAudio');
      if (!key || key==='none'){ audio.pause(); audio.removeAttribute('src'); return; }
      const src = AMBIENT[key];
      if (!src){ audio.pause(); audio.removeAttribute('src'); return; }
      audio.src = src;
      audio.volume = 0.35;
      audio.play().catch(()=>{});
    }

    // Simple numerology calc
    function digitSum(n){ return n.toString().split('').reduce((a,b)=>a+(+b),0); }
    function reduceNum(n){ while(n>9){ n = digitSum(n); } return n; }
    function numForDate(d){ return reduceNum(digitSum(d.getFullYear())+digitSum(d.getMonth()+1)+digitSum(d.getDate())); }

    // Load voices
    let VOICES=[];
    function loadVoices(){
      VOICES = window.speechSynthesis.getVoices();
      const sel=document.getElementById('voiceSel'); sel.innerHTML='';
      VOICES.forEach((v,i)=>{ const o=document.createElement('option'); o.value=i; o.textContent=v.name; sel.appendChild(o); });
    }
    window.speechSynthesis.onvoiceschanged = loadVoices;

    function speakText(text){
      window.speechSynthesis.cancel();
      const u=new SpeechSynthesisUtterance(text);
      const sel=document.getElementById('voiceSel');
      u.voice = VOICES[sel.value]||null;
      u.rate=parseFloat(document.getElementById('rateSel').value);
      window.speechSynthesis.speak(u);
    }

    // Load guides with fallback
    async function loadGuides(){
      try {
        const res = await fetch('backstories_full_fixed.json');
        if(res.ok){ const data=await res.json(); return data.guides||data; }
      } catch(e){}
      return [{
        id:"fallback",
        name:"Aurora Dawnweaver",
        element:"Air",
        domains:["Insight","Clarity"],
        backstory:"This is a fallback guide. Replace with your real backstories later.",
        mantra:"I align with clarity.",
        keywords:["clarity","dawn","decision"],
        sigil:"A-âˆ´-DW"
      }];
    }

    // App
    (async function(){
      document.getElementById('year').textContent = new Date().getFullYear();
      const GUIDES = await loadGuides();

      document.getElementById('guideForm').addEventListener('submit', (e)=>{
        e.preventDefault();
        const name=document.getElementById('name').value;
        const dob=document.getElementById('dob').value;
        if(!name||!dob) return;
        const d=new Date(dob);
        const lifePath=numForDate(d);

        const seed = (name+dob).length % GUIDES.length;
        const g = GUIDES[seed];

        document.getElementById('guideName').textContent=g.name;
        document.getElementById('guideMeta').textContent=`${g.element} â€¢ ${g.domains.join(' â€¢ ')}`;
        document.getElementById('lifePath').textContent=`Life Path ${lifePath}`;
        document.getElementById('seedOut').textContent=`Seed ${seed}`;
        document.getElementById('backstory').textContent=g.backstory;
        document.getElementById('mantra').textContent=g.mantra;
        document.getElementById('keywords').innerHTML=g.keywords.map(k=>`<li>${k}</li>`).join('');
        document.getElementById('sigilBox').textContent=g.sigil;

        document.getElementById('formSection').classList.add('hidden');
        document.getElementById('resultSection').classList.remove('hidden');
      });

      // Demo button
      document.getElementById('demoBtn').addEventListener('click', ()=>{
        document.getElementById('name').value="Demo User";
        document.getElementById('dob').value="1990-08-17";
      });

      // Reset
      document.getElementById('resetBtn').addEventListener('click', ()=>location.reload());

      // Narration
      document.getElementById('speakBtn').addEventListener('click', ()=>{
        const txt=document.getElementById('backstory').textContent;
        speakText(txt);
      });
      document.getElementById('stopSpeakBtn').addEventListener('click', ()=>window.speechSynthesis.cancel());

      // Ambient
      document.getElementById('ambSel').addEventListener('change', e=>setAmbient(e.target.value));
      document.getElementById('ambStopBtn').addEventListener('click', ()=>setAmbient('none'));
    })();
  </script>
</body>
</html>
